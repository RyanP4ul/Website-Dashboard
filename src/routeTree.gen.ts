/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GameRouteImport } from './routes/game'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PanelIndexRouteImport } from './routes/panel/index'
import { Route as PanelItemsRouteImport } from './routes/panel/items'
import { Route as PanelFactionsRouteImport } from './routes/panel/factions'
import { Route as PanelAreasRouteImport } from './routes/panel/areas'
import { Route as PanelAdminRouteImport } from './routes/panel/admin'
import { Route as authLoginRouteImport } from './routes/(auth)/login'

const GameRoute = GameRouteImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PanelIndexRoute = PanelIndexRouteImport.update({
  id: '/panel/',
  path: '/panel/',
  getParentRoute: () => rootRouteImport,
} as any)
const PanelItemsRoute = PanelItemsRouteImport.update({
  id: '/panel/items',
  path: '/panel/items',
  getParentRoute: () => rootRouteImport,
} as any)
const PanelFactionsRoute = PanelFactionsRouteImport.update({
  id: '/panel/factions',
  path: '/panel/factions',
  getParentRoute: () => rootRouteImport,
} as any)
const PanelAreasRoute = PanelAreasRouteImport.update({
  id: '/panel/areas',
  path: '/panel/areas',
  getParentRoute: () => rootRouteImport,
} as any)
const PanelAdminRoute = PanelAdminRouteImport.update({
  id: '/panel/admin',
  path: '/panel/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/game': typeof GameRoute
  '/login': typeof authLoginRoute
  '/panel/admin': typeof PanelAdminRoute
  '/panel/areas': typeof PanelAreasRoute
  '/panel/factions': typeof PanelFactionsRoute
  '/panel/items': typeof PanelItemsRoute
  '/panel': typeof PanelIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/game': typeof GameRoute
  '/login': typeof authLoginRoute
  '/panel/admin': typeof PanelAdminRoute
  '/panel/areas': typeof PanelAreasRoute
  '/panel/factions': typeof PanelFactionsRoute
  '/panel/items': typeof PanelItemsRoute
  '/panel': typeof PanelIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/game': typeof GameRoute
  '/(auth)/login': typeof authLoginRoute
  '/panel/admin': typeof PanelAdminRoute
  '/panel/areas': typeof PanelAreasRoute
  '/panel/factions': typeof PanelFactionsRoute
  '/panel/items': typeof PanelItemsRoute
  '/panel/': typeof PanelIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/game'
    | '/login'
    | '/panel/admin'
    | '/panel/areas'
    | '/panel/factions'
    | '/panel/items'
    | '/panel'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/game'
    | '/login'
    | '/panel/admin'
    | '/panel/areas'
    | '/panel/factions'
    | '/panel/items'
    | '/panel'
  id:
    | '__root__'
    | '/'
    | '/game'
    | '/(auth)/login'
    | '/panel/admin'
    | '/panel/areas'
    | '/panel/factions'
    | '/panel/items'
    | '/panel/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GameRoute: typeof GameRoute
  authLoginRoute: typeof authLoginRoute
  PanelAdminRoute: typeof PanelAdminRoute
  PanelAreasRoute: typeof PanelAreasRoute
  PanelFactionsRoute: typeof PanelFactionsRoute
  PanelItemsRoute: typeof PanelItemsRoute
  PanelIndexRoute: typeof PanelIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/panel/': {
      id: '/panel/'
      path: '/panel'
      fullPath: '/panel'
      preLoaderRoute: typeof PanelIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/panel/items': {
      id: '/panel/items'
      path: '/panel/items'
      fullPath: '/panel/items'
      preLoaderRoute: typeof PanelItemsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/panel/factions': {
      id: '/panel/factions'
      path: '/panel/factions'
      fullPath: '/panel/factions'
      preLoaderRoute: typeof PanelFactionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/panel/areas': {
      id: '/panel/areas'
      path: '/panel/areas'
      fullPath: '/panel/areas'
      preLoaderRoute: typeof PanelAreasRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/panel/admin': {
      id: '/panel/admin'
      path: '/panel/admin'
      fullPath: '/panel/admin'
      preLoaderRoute: typeof PanelAdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GameRoute: GameRoute,
  authLoginRoute: authLoginRoute,
  PanelAdminRoute: PanelAdminRoute,
  PanelAreasRoute: PanelAreasRoute,
  PanelFactionsRoute: PanelFactionsRoute,
  PanelItemsRoute: PanelItemsRoute,
  PanelIndexRoute: PanelIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
